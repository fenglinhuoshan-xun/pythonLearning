"""
    函数内存分配
"""
# 程序自上而下执行，只会将函数的代码存储到代码区，函数体中的代码不执行
# def fun01():
#     a = 100

# 调用函数时，在内存中开辟空间，存储函数内部定义的变量，该空间叫做栈帧
# 函数执行过后，栈帧释放。栈帧中所存储的变量被释放
# fun01()
# print(a)

def fun02(p1,p2):
    p1 = 20
    p2[0] = 20

# 结论1：传入不可变对象，函数体内部不可能修改数据
a = 10
# 结论2：传入可变对象，函数体内部可能会修改数据：当有[]时
b = [10]
fun02(a,b)
print(a) # ? 10
print(b) # ? [20]

def fun03(p1,p2):
    p1[0] = 20
    p2 = 20

a= [10]
b = [10]
fun03(a,b)
print(a) # ? [20]
print(b) # ? [10]